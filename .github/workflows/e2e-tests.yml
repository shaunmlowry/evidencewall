name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: false  # Disabled e2e tests in CI
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: evidencewall
          POSTGRES_PASSWORD: evidencewall_password
          POSTGRES_DB: evidencewall
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: |
        npm install
        cd frontend && npm install && cd ..
        cd shared && go mod tidy && cd ..
        cd services/auth && go mod tidy && cd ../..
        cd services/boards && go mod tidy && cd ../..

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Create environment file
      run: |
        cp env.example .env
        # Update environment variables for CI
        sed -i 's/localhost/127.0.0.1/g' .env
        echo "CI=true" >> .env

    - name: Build Go services
      run: make build

    - name: Run database migrations
      run: |
        # Run migrations if they exist
        if [ -f "services/auth/cmd/migrate/main.go" ]; then
          make migrate-up || echo "Migrations already applied or not needed"
        fi

    - name: Start backend services
      run: |
        # Start auth service in background
        cd services/auth && go run cmd/server/main.go &
        # Start boards service in background  
        cd services/boards && go run cmd/server/main.go &
        # Wait for services to start
        sleep 10
      env:
        DATABASE_URL: postgres://evidencewall:evidencewall_password@127.0.0.1:5432/evidencewall?sslmode=disable
        REDIS_URL: redis://127.0.0.1:6379
        JWT_SECRET: test-jwt-secret-for-ci
        AUTH_SERVICE_PORT: 8001
        BOARDS_SERVICE_PORT: 8002

    - name: Start frontend
      run: |
        cd frontend && npm start &
        # Wait for frontend to start
        sleep 30
      env:
        REACT_APP_API_BASE_URL: http://localhost:8001
        REACT_APP_BOARDS_API_URL: http://localhost:8002
        REACT_APP_WEBSOCKET_URL: ws://localhost:8003

    - name: Wait for services to be ready
      run: |
        # Wait for auth service
        timeout 60 bash -c 'until curl -f http://localhost:8001/health; do sleep 2; done'
        # Wait for boards service  
        timeout 60 bash -c 'until curl -f http://localhost:8002/health; do sleep 2; done'
        # Wait for frontend
        timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

    - name: Run Playwright tests
      run: npx playwright test
      env:
        CI: true

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30

  # Job to run tests on multiple browsers in parallel
  e2e-tests-matrix:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: false  # Disabled e2e tests in CI
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: evidencewall
          POSTGRES_PASSWORD: evidencewall_password
          POSTGRES_DB: evidencewall
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: |
        npm install
        cd frontend && npm install && cd ..
        cd shared && go mod tidy && cd ..
        cd services/auth && go mod tidy && cd ../..
        cd services/boards && go mod tidy && cd ../..

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.project }}

    - name: Create environment file
      run: |
        cp env.example .env
        sed -i 's/localhost/127.0.0.1/g' .env
        echo "CI=true" >> .env

    - name: Build and start services
      run: |
        make build
        cd services/auth && go run cmd/server/main.go &
        cd services/boards && go run cmd/server/main.go &
        cd frontend && npm start &
        sleep 30
      env:
        DATABASE_URL: postgres://evidencewall:evidencewall_password@127.0.0.1:5432/evidencewall?sslmode=disable
        REDIS_URL: redis://127.0.0.1:6379
        JWT_SECRET: test-jwt-secret-for-ci
        AUTH_SERVICE_PORT: 8001
        BOARDS_SERVICE_PORT: 8002
        REACT_APP_API_BASE_URL: http://localhost:8001
        REACT_APP_BOARDS_API_URL: http://localhost:8002

    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.project }}
      env:
        CI: true

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.project }}
        path: playwright-report/
        retention-days: 30
